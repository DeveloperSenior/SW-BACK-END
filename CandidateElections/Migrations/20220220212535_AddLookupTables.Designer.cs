// <auto-generated />
using System;
using CandidateElections.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CandidateElections.Migrations
{
    [DbContext(typeof(CandidateElectionsContext))]
    [Migration("20220220212535_AddLookupTables")]
    partial class AddLookupTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CandidateElections.Models.Campaign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cdcampana")
                        .HasColumnType("text")
                        .HasColumnName("cdcampana");

                    b.Property<string>("Dscampana")
                        .HasColumnType("text")
                        .HasColumnName("dscampana");

                    b.HasKey("Id")
                        .HasName("pk_campaigns");

                    b.ToTable("campaigns");
                });

            modelBuilder.Entity("CandidateElections.Models.Candidate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cdcandidato")
                        .HasColumnType("text")
                        .HasColumnName("cdcandidato");

                    b.Property<string>("CddcumentoId")
                        .HasColumnType("text")
                        .HasColumnName("cddcumento_id");

                    b.Property<string>("DspathFoto")
                        .HasColumnType("text")
                        .HasColumnName("dspath_foto");

                    b.Property<double>("Ptpresupuesto")
                        .HasColumnType("double precision")
                        .HasColumnName("ptpresupuesto");

                    b.HasKey("Id")
                        .HasName("pk_candidates");

                    b.HasIndex("CddcumentoId")
                        .HasDatabaseName("ix_candidates_cddcumento_id");

                    b.ToTable("candidates");
                });

            modelBuilder.Entity("CandidateElections.Models.CandidateVote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CdcampanaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdcampana_id");

                    b.Property<long?>("CdcandidatoId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdcandidato_id");

                    b.Property<string>("CddocumentoVotanteId")
                        .HasColumnType("text")
                        .HasColumnName("cddocumento_votante_id");

                    b.HasKey("Id")
                        .HasName("pk_candidates_votes");

                    b.HasIndex("CdcampanaId")
                        .HasDatabaseName("ix_candidates_votes_cdcampana_id");

                    b.HasIndex("CdcandidatoId")
                        .HasDatabaseName("ix_candidates_votes_cdcandidato_id");

                    b.HasIndex("CddocumentoVotanteId")
                        .HasDatabaseName("ix_candidates_votes_cddocumento_votante_id");

                    b.ToTable("candidates_votes");
                });

            modelBuilder.Entity("CandidateElections.Models.Elect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CdcampanaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdcampana_id");

                    b.Property<long?>("CdcandidatoId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdcandidato_id");

                    b.Property<string>("CddocumentoId")
                        .HasColumnType("text")
                        .HasColumnName("cddocumento_id");

                    b.Property<DateTime>("FeperiodoFin")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("feperiodo_fin");

                    b.Property<DateTime>("FeperiodoInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("feperiodo_inicio");

                    b.Property<long>("Nmvotos")
                        .HasColumnType("bigint")
                        .HasColumnName("nmvotos");

                    b.HasKey("Id")
                        .HasName("pk_elects");

                    b.HasIndex("CdcampanaId")
                        .HasDatabaseName("ix_elects_cdcampana_id");

                    b.HasIndex("CdcandidatoId")
                        .HasDatabaseName("ix_elects_cdcandidato_id");

                    b.HasIndex("CddocumentoId")
                        .HasDatabaseName("ix_elects_cddocumento_id");

                    b.ToTable("elects");
                });

            modelBuilder.Entity("CandidateElections.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("cddocumento");

                    b.Property<string>("CdciudadExpedicionDocto")
                        .HasColumnType("text")
                        .HasColumnName("cdciudad_expedicion_docto");

                    b.Property<string>("Cdciudad_expedicion_docto")
                        .HasColumnType("text")
                        .HasColumnName("cdciudad_expedicion_docto1");

                    b.Property<string>("CdtipoDocumento")
                        .HasColumnType("text")
                        .HasColumnName("cdtipo_documento");

                    b.Property<string>("Dsapellido1")
                        .HasColumnType("text")
                        .HasColumnName("dsapellido1");

                    b.Property<string>("Dsapellido2")
                        .HasColumnType("text")
                        .HasColumnName("dsapellido2");

                    b.Property<string>("Dscelular")
                        .HasColumnType("text")
                        .HasColumnName("dscelular");

                    b.Property<string>("Dsdireccion")
                        .HasColumnType("text")
                        .HasColumnName("dsdireccion");

                    b.Property<string>("Dsemail")
                        .HasColumnType("text")
                        .HasColumnName("dsemail");

                    b.Property<string>("Dsnombre1")
                        .HasColumnType("text")
                        .HasColumnName("dsnombre1");

                    b.Property<string>("Dsnombre2")
                        .HasColumnType("text")
                        .HasColumnName("dsnombre2");

                    b.Property<string>("DsnombreCompleto")
                        .HasColumnType("text")
                        .HasColumnName("dsnombre_completo");

                    b.Property<string>("Dstelefono")
                        .HasColumnType("text")
                        .HasColumnName("dstelefono");

                    b.Property<DateTime>("FeexpedicionDocumento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("feexpedicion_documento");

                    b.Property<DateTime>("Fenacimiento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fenacimiento");

                    b.Property<string>("SncomunicadosEmail")
                        .HasColumnType("text")
                        .HasColumnName("sncomunicados_email");

                    b.Property<string>("SncomunicadosTextos")
                        .HasColumnType("text")
                        .HasColumnName("sncomunicados_textos");

                    b.Property<string>("SntratamientoDatos")
                        .HasColumnType("text")
                        .HasColumnName("sntratamiento_datos");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("CandidateElections.Models.Table", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cdciudad")
                        .HasColumnType("text")
                        .HasColumnName("cdciudad");

                    b.Property<string>("Cdmesa")
                        .HasColumnType("text")
                        .HasColumnName("cdmesa");

                    b.HasKey("Id")
                        .HasName("pk_tables");

                    b.ToTable("tables");
                });

            modelBuilder.Entity("CandidateElections.Models.Voter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CdcampanaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdcampana_id");

                    b.Property<string>("CddocumentoId")
                        .HasColumnType("text")
                        .HasColumnName("cddocumento_id");

                    b.Property<long?>("CdmesaAsignadaId")
                        .HasColumnType("bigint")
                        .HasColumnName("cdmesa_asignada_id");

                    b.Property<string>("Snvoto")
                        .HasColumnType("text")
                        .HasColumnName("snvoto");

                    b.HasKey("Id")
                        .HasName("pk_voters");

                    b.HasIndex("CdcampanaId")
                        .HasDatabaseName("ix_voters_cdcampana_id");

                    b.HasIndex("CddocumentoId")
                        .HasDatabaseName("ix_voters_cddocumento_id");

                    b.HasIndex("CdmesaAsignadaId")
                        .HasDatabaseName("ix_voters_cdmesa_asignada_id");

                    b.ToTable("voters");
                });

            modelBuilder.Entity("CandidateElections.Models.Candidate", b =>
                {
                    b.HasOne("CandidateElections.Models.Person", "Cddcumento")
                        .WithMany()
                        .HasForeignKey("CddcumentoId")
                        .HasConstraintName("fk_candidates_persons_cddcumento_id");

                    b.Navigation("Cddcumento");
                });

            modelBuilder.Entity("CandidateElections.Models.CandidateVote", b =>
                {
                    b.HasOne("CandidateElections.Models.Campaign", "Cdcampana")
                        .WithMany()
                        .HasForeignKey("CdcampanaId")
                        .HasConstraintName("fk_candidates_votes_campaigns_cdcampana_id");

                    b.HasOne("CandidateElections.Models.Candidate", "Cdcandidato")
                        .WithMany()
                        .HasForeignKey("CdcandidatoId")
                        .HasConstraintName("fk_candidates_votes_candidates_cdcandidato_id");

                    b.HasOne("CandidateElections.Models.Person", "CddocumentoVotante")
                        .WithMany()
                        .HasForeignKey("CddocumentoVotanteId")
                        .HasConstraintName("fk_candidates_votes_persons_cddocumento_votante_id");

                    b.Navigation("Cdcampana");

                    b.Navigation("Cdcandidato");

                    b.Navigation("CddocumentoVotante");
                });

            modelBuilder.Entity("CandidateElections.Models.Elect", b =>
                {
                    b.HasOne("CandidateElections.Models.Campaign", "Cdcampana")
                        .WithMany()
                        .HasForeignKey("CdcampanaId")
                        .HasConstraintName("fk_elects_campaigns_cdcampana_id");

                    b.HasOne("CandidateElections.Models.Candidate", "Cdcandidato")
                        .WithMany()
                        .HasForeignKey("CdcandidatoId")
                        .HasConstraintName("fk_elects_candidates_cdcandidato_id");

                    b.HasOne("CandidateElections.Models.Person", "Cddocumento")
                        .WithMany()
                        .HasForeignKey("CddocumentoId")
                        .HasConstraintName("fk_elects_persons_cddocumento_id");

                    b.Navigation("Cdcampana");

                    b.Navigation("Cdcandidato");

                    b.Navigation("Cddocumento");
                });

            modelBuilder.Entity("CandidateElections.Models.Voter", b =>
                {
                    b.HasOne("CandidateElections.Models.Campaign", "Cdcampana")
                        .WithMany()
                        .HasForeignKey("CdcampanaId")
                        .HasConstraintName("fk_voters_campaigns_cdcampana_id");

                    b.HasOne("CandidateElections.Models.Person", "Cddocumento")
                        .WithMany()
                        .HasForeignKey("CddocumentoId")
                        .HasConstraintName("fk_voters_persons_cddocumento_id");

                    b.HasOne("CandidateElections.Models.Table", "CdmesaAsignada")
                        .WithMany()
                        .HasForeignKey("CdmesaAsignadaId")
                        .HasConstraintName("fk_voters_tables_cdmesa_asignada_id");

                    b.Navigation("Cdcampana");

                    b.Navigation("Cddocumento");

                    b.Navigation("CdmesaAsignada");
                });
#pragma warning restore 612, 618
        }
    }
}
